// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Profile {
  id       String @id @default(uuid())
  userId   String @unique
  name     String
  imageUrl String @db.Text
  email    String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members  Member[]
  servers  Server[]
  channels Channel[]
}

model Server {
  id         String @id @default(uuid())
  name       String
  imageUrl   String @db.Text
  inviteCode String @db.Text

  Profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String

  members  Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  MEMBER
}

model Member {
  id        String     @id @default(uuid())
  role      MemberRole @default(MEMBER)
  profile   Profile?   @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String?
  server    Server?    @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}

enum ChannelType {
  Text
  AUDIO
  VIDEO
}

model Channel {
  id   String      @id @default(uuid())
  name String
  type ChannelType @default(Text)

  profile   Profile? @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String?

  server   Server? @relation(fields: [serverId], references: [id], onDelete: Cascade)
  serverId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}
